//================================================================
// file         : isa_C
// description  : RISC-V Multiple and Divide
// author       : Wataru
// version      :
// date         : 2023-07-28
//================================================================
package isa
import chisel3.util.BitPat

object isa_M {
  def mul   : BitPat = BitPat("b0000001 ????? ????? 000 ????? 0110011")
  def mulh  : BitPat = BitPat("b0000001 ????? ????? 001 ????? 0110011")
  def mulhsu: BitPat = BitPat("b0000001 ????? ????? 010 ????? 0110011")
  def mulhu : BitPat = BitPat("b0000001 ????? ????? 011 ????? 0110011")
  def div   : BitPat = BitPat("b0000001 ????? ????? 100 ????? 0110011")
  def divu  : BitPat = BitPat("b0000001 ????? ????? 101 ????? 0110011")
  def rem   : BitPat = BitPat("b0000001 ????? ????? 110 ????? 0110011")
  def remu  : BitPat = BitPat("b0000001 ????? ????? 111 ????? 0110011")
}

object isa_64M {
  def mulw  : BitPat = BitPat("b0000001 ????? ????? 000 ????? 0111011")
  def divw  : BitPat = BitPat("b0000001 ????? ????? 100 ????? 0111011")
  def divuw : BitPat = BitPat("b0000001 ????? ????? 101 ????? 0111011")
  def remw  : BitPat = BitPat("b0000001 ????? ????? 110 ????? 0111011")
  def remuw : BitPat = BitPat("b0000001 ????? ????? 111 ????? 0111011")
}
